package
{
   import flash.utils.*;
   
   class Skotina
   {
      
      static var skotina_class:Class = Skotina_skotina_class;
       
      function Skotina()
      {
         super();
      }
      
      public static function Payload(param1:*, param2:*, param3:String) : Vector.<uint>
      {
         var _loc4_:Vector.<uint> = new Vector.<uint>();
         var _loc5_:ByteArray = get_skotina(param1,param2,param3);
         _loc5_.endian = "littleEndian";
         _loc5_.position = 0;
         while(_loc5_.position < _loc5_.length)
         {
            _loc4_.push(_loc5_.readUnsignedInt());
         }
         return _loc4_;
      }
      
      static function get_skotina(param1:*, param2:*, param3:String) : ByteArray
      {
         var _loc4_:String = "iso-8859-1";
         if(param1 == null || param2 == null || param3 == null)
         {
            return null;
         }
         var _loc5_:ByteArray = new ByteArray();
         _loc5_ = Utils.unzip("littleEndian",new skotina_class() as ByteArray);
         _loc5_.position = 0;
         var _loc6_:ByteArray = new ByteArray();
         _loc6_.writeBytes(_loc5_,0,_loc5_.length);
         _loc6_.writeMultiByte(param1,_loc4_);
         _loc6_.writeByte(34);
         _loc6_.writeByte(32);
         _loc6_.writeByte(34);
         _loc6_.writeMultiByte(param2,_loc4_);
         _loc6_.writeByte(34);
         _loc6_.writeByte(32);
         _loc6_.writeByte(34);
         _loc6_.writeMultiByte(param3,_loc4_);
         _loc6_.writeByte(34);
         _loc6_.writeUnsignedInt(0);
         while(_loc6_.length % 4 != 0)
         {
            _loc6_.writeByte(0);
         }
         _loc6_.position = 0;
         return _loc6_;
      }
   }
}
